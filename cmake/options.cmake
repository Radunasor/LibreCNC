set(PROJECT_NAME_UPPER ${PROJECT_NAME})
string(TOUPPER ${PROJECT_NAME_UPPER} PROJECT_NAME_UPPER)

###GCODE PARSER BUILD ENABLE OPTION###
option(${PROJECT_NAME_UPPER}_GCODE_PARSER_ENABLE "build gcode parser for \"${PROJECT_NAME}\"" ON)

if(${PROJECT_NAME_UPPER}_GCODE_PARSER_ENABLE)
    set(LC_GCODE_PARSER_BUILD_ENABLE 1)
else()
    set(LC_GCODE_PARSER_BUILD_ENABLE 0)
endif()

###LOG LEVEL CONFIG###
set(LOG_LEVEL_CHOICES "TRACE" "DEBUG" "INFO" "WARNING" "ERROR" "OFF")
set(LOG_LEVEL_VALUES 1 2 3 4 5 6)
set(${PROJECT_NAME_UPPER}_LOG_LEVEL "DEBUG" CACHE STRING "Set the log level")
set_property(CACHE ${PROJECT_NAME_UPPER}_LOG_LEVEL PROPERTY STRINGS ${LOG_LEVEL_CHOICES})

# Map log levels to corresponding integer values
list(FIND LOG_LEVEL_CHOICES ${${PROJECT_NAME_UPPER}_LOG_LEVEL} LOG_LEVEL_INDEX)
if(LOG_LEVEL_INDEX EQUAL -1)
    message(FATAL_ERROR "Invalid log level specified: ${PROJECT_NAME_UPPER}_LOG_LEVEL}")
endif()
list(GET LOG_LEVEL_VALUES ${LOG_LEVEL_INDEX} LC_LOG_LEVEL_INT)

###GCODE PARAMETER SUPPORT OPTION###
option(${PROJECT_NAME_UPPER}_GCODE_PARAMETER_SUPPORT "GCODE Paramtere Support" OFF)

if(${PROJECT_NAME_UPPER}_GCODE_PARAMETER_SUPPORT)
    set(LC_GCODE_PARAMETER_SUPPORT 1)
else()
    set(LC_GCODE_PARAMETER_SUPPORT 0)
endif()